name: CI - Docker Image Build

on:
  push:
    paths:
      - ".github/workflows/ci-build.yml"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gpt-app

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        python-version: [3.8]
        node-version: [16.x]

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies (poetry)
      run: poetry install

    - name: Install dependencies (yarn)
      working-directory: ./assets
      run: yarn

    - name: Build assets (vite)
      working-directory: ./assets
      run: yarn build

    - name: Export requirements.txt
      run: poetry export --without-hashes -f requirements.txt --output requirements.txt

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
